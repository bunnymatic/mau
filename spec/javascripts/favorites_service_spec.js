// Generated by CoffeeScript 1.12.7
(function() {
  describe("mau.services.favoriteService", function() {
    beforeEach(function() {
      module("mau.services");
      inject(function($httpBackend, $q, favoritesService) {
        this.service = favoritesService;
        this.http = $httpBackend;
        return (this.q = $q);
      });
      return null;
    });
    afterEach(function() {
      this.http.verifyNoOutstandingExpectation();
      return this.http.verifyNoOutstandingRequest();
    });
    return describe(".add", function() {
      it("calls the right endpoint to add this favorite if there is a logged in user", function() {
        var expectedPost, id, response, success, type;
        type = "Artist";
        id = "12";
        success = {
          message: "eat at joes"
        };
        expectedPost = {
          favorite: {
            type: type,
            id: id
          }
        };
        this.http.when("GET", "/users/whoami").respond({
          current_user: "the_user"
        });
        this.http
          .expect("POST", "/users/the_user/favorites", expectedPost)
          .respond(success);
        response = this.service.add(type, id);
        this.http.flush();
        return response.then(function(data) {
          return expect(data.message).toEqual("eat at joes");
        });
      });
      it("returns a message if there is not a logged in user", function() {
        var response;
        this.http.when("GET", "/users/whoami").respond({
          current_user: null
        });
        response = this.service.add("the_type", "the_id");
        this.http.flush();
        return response.then(function(data) {
          return expect(data).toEqual({
            message: "You need to login before you can favorite things"
          });
        });
      });
      return it("returns a message if there is favoriting fails", function() {
        var expectedPost, response;
        expectedPost = {
          favorite: {
            type: null,
            id: null
          }
        };
        this.http.when("GET", "/users/whoami").respond({
          current_user: "somebody"
        });
        this.http
          .expect("POST", "/users/somebody/favorites", expectedPost)
          .respond(500, {});
        response = this.service.add(null, null);
        this.http.flush();
        return response.then(function(data) {
          return expect(data).toEqual({
            message:
              "That item doesn't seem to be available to favorite.  If you think it should be, please drop us a note and we'll look into it."
          });
        });
      });
    });
  });
}.call(this));
