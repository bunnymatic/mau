// Generated by CoffeeScript 1.12.7
(function() {
  describe('MAU.QueryStringParser', function() {
    beforeEach(function() {
      this.url = 'http://this.com/path/subpath?a=1&b=2&c=%2Fprojects%2Fmau%2Fspec%2F#ABC';
      return this.parser = new MAU.QueryStringParser(this.url);
    });
    describe('#constructor', function() {
      it("provides access to url", function() {
        return expect(this.parser.url).toEqual(this.url);
      });
      it("provides access to origin", function() {
        return expect(this.parser.origin).toEqual('http://this.com');
      });
      it("provides access to protocol", function() {
        return expect(this.parser.protocol).toEqual('http:');
      });
      it("provides access to hash", function() {
        return expect(this.parser.hash).toEqual('#ABC');
      });
      it("provides access to pathname", function() {
        return expect(this.parser.pathname).toEqual('/path/subpath');
      });
      return it("provides access to query params", function() {
        return expect(this.parser.query_params).toEqual({
          a: '1',
          b: '2',
          c: '%2Fprojects%2Fmau%2Fspec%2F'
        });
      });
    });
    return describe('#toString', function() {
      return it("reconstitutes the url properly", function() {
        var s;
        this.parser.query_params['blue'] = 'red';
        delete this.parser.query_params['c'];
        s = this.parser.toString();
        expect(s).toContain('a=1');
        expect(s).toContain('b=2');
        expect(s).toContain('blue=red');
        expect(s).not.toContain('c=');
        expect(s).toContain('#ABC');
        return expect(s).toContain('http://this.com/path/subpath?');
      });
    });
  });

}).call(this);
