// Generated by CoffeeScript 1.12.7
(function() {
  describe("jQuery.hideableRows", function() {
    var local_fixtures;
    local_fixtures = {
      hideable_row_table:
        "<div id='hideable_row_table'>\n  <fieldset class='hide-rows'>\n   <input id='check_one' type='checkbox' value='one'>\n   <input id='check_two' type='checkbox' value='two'>\n   <input id='check_three' type='checkbox' value='three'>\n  </fieldset>\n  <table>\n   <tbody>\n    <tr class='one'></tr>\n    <tr class='two'></tr>\n    <tr class='three'></tr\">\n    <tr class='two'></tr>\n   </tbody>\n  </table>\n</div>",
      hideable_row_rows:
        "<div id='hideable_row_divs'>\n  <fieldset class='hiders'>\n    <input id='check_one' type='checkbox' value='one'>\n    <input id='check_two' type='checkbox' value='two'>\n    <input id='check_three' type='checkbox' value='three'>\n  </fieldset>\n  <div class='items'>\n    <div class='item one'></div>\n    <div class='item two'></div>\n    <div class='item three'></div>\n    <div class='item two'></div>\n  </div>\n</div>",
      multi_hideable_rows:
        "<div id='hideable_multi_row_divs'>\n  <fieldset class='hiders'>\n    <input id='check_published' type='checkbox' value='published'>\n    <input id='check_past' type='checkbox' value='past'>\n    <input id='check_future' type='checkbox' value='future'>\n  </fieldset>\n  <div class='items'>\n    <div class='item published past'></div>\n    <div class='item published future'></div>\n    <div class='item published past'></div>\n    <div class='item unpublished past'></div>\n    <div class='item unpublished future'></div>\n  </div>\n</div>"
    };
    describe("with default initialization", function() {
      beforeEach(function() {
        fixture.set(local_fixtures.hideable_row_table);
        return jQuery("#hideable_row_table").hideableRows();
      });
      return it("when you choose .two it hides rows with class .two", function() {
        expect(jQuery("table .two.js-hidden-row").length).toEqual(0);
        jQuery("#check_two").click();
        return expect(jQuery("table .two.js-hidden-row").length).toEqual(2);
      });
    });
    describe("with custom row selector and input selectors", function() {
      beforeEach(function() {
        fixture.set(local_fixtures.hideable_row_rows);
        return jQuery("#hideable_row_divs").hideableRows({
          row: ".item",
          whatToHideSelectors: ".hiders input"
        });
      });
      return it("when you choose .two it hides rows with class .two", function() {
        expect(jQuery(".item.two.js-hidden-row").length).toEqual(0);
        jQuery("#check_two").click();
        return expect(jQuery(".item.two.js-hidden-row").length).toEqual(2);
      });
    });
    return describe("with custom row selector and input selectors and multi-filter", function() {
      beforeEach(function() {
        fixture.set(local_fixtures.multi_hideable_rows);
        return jQuery("#hideable_multi_row_divs").hideableRows({
          row: ".item",
          whatToHideSelectors: ".hiders input",
          multiFilter: true
        });
      });
      it("when you choose past it hides the past elements", function() {
        expect(jQuery(".js-hidden-row").length).toEqual(0);
        jQuery("#check_past").click();
        expect(jQuery(".item.past").length).toEqual(3);
        return expect(jQuery(".item.past.js-hidden-row")).toEqual(
          jQuery(".item.past")
        );
      });
      it("when you choose published and future it hides all published and/or future elements", function() {
        expect(jQuery(".js-hidden-row").length).toEqual(0);
        jQuery("#check_past").click();
        jQuery("#check_published").click();
        expect(jQuery(".item.past.js-hidden-row")).toEqual(
          jQuery(".item.past")
        );
        return expect(jQuery(".item.published.js-hidden-row")).toEqual(
          jQuery(".item.published")
        );
      });
      return it("when you choose published and future, then unclick future, it does not filter future", function() {
        expect(jQuery(".js-hidden-row").length).toEqual(0);
        jQuery("#check_future").click();
        jQuery("#check_published").click();
        expect(jQuery(".item.future.js-hidden-row")).toEqual(
          jQuery(".item.future")
        );
        expect(jQuery(".item.published.js-hidden-row")).toEqual(
          jQuery(".item.published")
        );
        jQuery("#check_future").click();
        expect(jQuery(".item.published.js-hidden-row")).toEqual(
          jQuery(".item.published")
        );
        return expect(jQuery(".item.future.js-hidden-row").length).toEqual(1);
      });
    });
  });
}.call(this));
