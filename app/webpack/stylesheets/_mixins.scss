@import "gto/variables";
@import "colors";

@mixin background-cover {
  background-repeat: no-repeat;
  background-size: cover;
  background-position: center;
}
@mixin background-contain {
  background-repeat: no-repeat;
  background-size: contain;
  background-position: center;
}

@mixin transparent_black_background {
  background-color: $black;
  background-color: rgba(10, 10, 10, 0.8);
}

@mixin transparent_blue_background {
  background-color: $darkbluegray;
  background-color: rgba(60, 40, 100, 0.4);
}

@mixin transparent_white_background {
  background-color: $x-light-gray;
  background-color: rgba(240, 240, 240, 0.7);
}

@mixin dotted_border {
  border: 1px dotted $border-gray;
}
@mixin solid_border {
  border: 1px solid $border-gray;
}
@mixin input_style {
  border: 1px solid $lightbluegray;
  background-color: $x-light-gray;
  padding: 4px;
}
@mixin link_style {
  text-decoration: none;
  color: $gto_teal;
  &:link,
  &:visited,
  &:active {
    color: $gto_teal;
  }
  &:hover {
    color: $gto_dark_teal;
  }
}

@mixin little-text {
  font-size: x-small;
}

$default_rounded_amount: 3px;

@mixin opacity($opacity) {
  filter: unquote(
    "progid:DXImageTransform.Microsoft.Alpha(Opacity=#{round($opacity * 100)})"
  );
  opacity: $opacity;
}

// Round corner at position by amount.
@mixin round-corner($position, $amount: $default_rounded_amount) {
  border-#{$position}-radius: $amount;
}

@mixin round-corner-mozilla($position, $amount: $default_rounded_amount) {
  -moz-border-radius-#{$position}: $amount;
}

// Round left corners by amount
@mixin round-left-corners($amount: $default_rounded_amount) {
  @include round-corner("top-left", $amount);
  @include round-corner("bottom-left", $amount);
  @include round-corner-mozilla("topleft", $amount);
  @include round-corner-mozilla("bottomleft", $amount);
}

// Round right corners by amount
@mixin round-right-corners($amount: $default_rounded_amount) {
  @include round-corner("top-right", $amount);
  @include round-corner("bottom-right", $amount);
  @include round-corner-mozilla("topright", $amount);
  @include round-corner-mozilla("bottomright", $amount);
}
// Round top corners by amount
@mixin round-top-corners($amount: 5px) {
  @include round-corner("top-left", $amount);
  @include round-corner("top-right", $amount);
  @include round-corner-mozilla("topleft", $amount);
  @include round-corner-mozilla("topright", $amount);
}

// Round bottom corners by amount
@mixin round-bottom-corners($amount: $default_rounded_amount) {
  @include round-corner("bottom-left", $amount);
  @include round-corner("bottom-right", $amount);
  @include round-corner-mozilla("bottomleft", $amount);
  @include round-corner-mozilla("bottomright", $amount);
}

@mixin round-left-corners-only($amount: $default_rounded_amount) {
  @include round-corner("top-left", $amount);
  @include round-corner("bottom-left", $amount);
  @include round-corner-mozilla("topleft", $amount);
  @include round-corner-mozilla("bottomleft", $amount);

  @include round-corner("top-right", 0);
  @include round-corner("bottom-right", 0);
  @include round-corner-mozilla("topright", 0);
  @include round-corner-mozilla("bottomright", 0);
}

// Round right corners by amount
@mixin round-right-corners-only($amount: $default_rounded_amount) {
  @include round-corner("top-right", $amount);
  @include round-corner("bottom-right", $amount);
  @include round-corner-mozilla("topright", $amount);
  @include round-corner-mozilla("bottomright", $amount);

  @include round-corner("top-left", 0);
  @include round-corner("bottom-left", 0);
  @include round-corner-mozilla("topleft", 0);
  @include round-corner-mozilla("bottomleft", 0);
}

// Round all corners by amount
@mixin round-corners($amount: $default_rounded_amount) {
  border-radius: $amount;
}

@mixin small-rounded-bottom-corners {
  @include round-bottom-corners;
}
@mixin small-rounded-top-corners {
  @include round-bottom-corners;
}

@mixin small-rounded-corners {
  @include round-corners;
}
@mixin large-rounded-corners {
  @include round-corners($amount: 7px);
}

@mixin floating-window-border {
  @include light-border;
  box-shadow: 0px 0px 8px rgba(200, 200, 200, 0.8);
}

@mixin box-shadow($shadow) {
  box-shadow: $shadow;
}
@mixin transition($trans) {
  transition: $trans;
}

@mixin transition-property($transition-property...) {
  transition-property: $transition-property;
}
@mixin transition-delay($transition-delay) {
  transition-delay: $transition-delay;
}
@mixin transition-duration($transition-duration...) {
  transition-duration: $transition-duration;
}
@mixin transition-timing-function($timing-function) {
  transition-timing-function: $timing-function;
}
@mixin transition-transform($transition...) {
  transition: transform $transition;
}
@mixin transform($transform...) {
  transform: $transform;
}
@mixin transform-origin($origin...) {
  transform-origin: $origin;
}

@mixin bottom-label-overlay {
  z-index: 0;
  position: absolute;
  bottom: 0px;
  left: 0;
  width: 100%;
  background-color: rgba(255, 255, 255, 0.9);
  color: #222;
}

@mixin blur($radius: 5px) {
  filter: blur($radius);
}

@mixin ellipsis {
  white-space: nowrap;
  text-overflow: ellipsis;
  overflow: hidden;
}

@mixin sidebar-nav-entry {
  min-height: 28px;
  line-height: 28px;
  overflow: hidden;
  @include ellipsis;
}

@mixin make-xs-offset($columns, $grid-columns) {
  margin-left: percentage(($columns / $grid-columns));
}
@mixin make-xs-push($columns, $grid-columns) {
  left: percentage(($columns / $grid-columns));
}
@mixin make-xs-pull($columns, $grid-columns) {
  right: percentage(($columns / $grid-columns));
}

@mixin make-sm-offset($columns, $grid-columns) {
  @media (min-width: $screen-sm-min) {
    margin-left: percentage(($columns / $grid-columns));
  }
}
@mixin make-sm-push($columns, $grid-columns) {
  @media (min-width: $screen-sm-min) {
    left: percentage(($columns / $grid-columns));
  }
}
@mixin make-sm-pull($columns, $grid-columns) {
  @media (min-width: $screen-sm-min) {
    right: percentage(($columns / $grid-columns));
  }
}

@mixin make-md-offset($columns, $grid-columns) {
  @media (min-width: $screen-md-min) {
    margin-left: percentage(($columns / $grid-columns));
  }
}
@mixin make-md-push($columns, $grid-columns) {
  @media (min-width: $screen-md-min) {
    left: percentage(($columns / $grid-columns));
  }
}
@mixin make-md-pull($columns, $grid-columns) {
  @media (min-width: $screen-md-min) {
    right: percentage(($columns / $grid-columns));
  }
}

@mixin make-lg-offset($columns, $grid-columns) {
  @media (min-width: $screen-lg-min) {
    margin-left: percentage(($columns / $grid-columns));
  }
}
@mixin make-lg-push($columns, $grid-columns) {
  @media (min-width: $screen-lg-min) {
    left: percentage(($columns / $grid-columns));
  }
}
@mixin make-lg-pull($columns, $grid-columns) {
  @media (min-width: $screen-lg-min) {
    right: percentage(($columns / $grid-columns));
  }
}

/* Test if `$value` is a valid direction
 * @param {*} $value - Value to test
 * @return {Bool}
 */
@function is-direction($value) {
  $is-keyword: index(
    (
      to top,
      to top right,
      to right top,
      to right,
      to bottom right,
      to right bottom,
      to bottom,
      to bottom left,
      to left bottom,
      to left,
      to left top,
      to top left
    ),
    $value
  );
  $is-angle: type-of($value) == "number" and
    index("deg" "grad" "turn" "rad", unit($value));

  @return $is-keyword or $is-angle;
}

@mixin linear-gradient($direction, $color-stops...) {
  /* Direction has been omitted and happens to be a color-stop */
  @if is-direction($direction) == false {
    $color-stops: $direction, $color-stops;
    $direction: 180deg;
  }

  background: nth(nth($color-stops, 1), 1);
  background: linear-gradient($direction, $color-stops);
}

@mixin in-the-middle {
  position: absolute;
  left: 50%;
  top: 50%;
  @include transform(translate(-50%, -50%));
}

@mixin light-border {
  border: 1px solid $x-light-gray;
}

@mixin light-bottom-border {
  border-bottom: 1px solid $x-light-gray;
}

@mixin light-gray-button {
  @include transition(all 0.33s ease-in-out);
  @include round-corners(2px);
  padding: 4px 2px;
  min-width: 25px;
  font-size: 0.8rem;
  background-color: $xx-light-gray;
  text-align: center;
  &:hover {
    background-color: lighten($gto_yellow, 54%);
  }
}

@mixin all-caps-label {
  text-transform: uppercase;
  font-size: 0.8rem;
  font-weight: $font-weight-bold;
}
@mixin card-description {
  padding: 6px;
  border-radius: 3px;
  @include bottom-label-overlay;
  @include transition(opacity 0.25s ease-in-out);
  width: calc(100% - 40px);
  margin: 0 20px 20px;
  font-size: 0.8rem;
  text-align: center;
  @include box-shadow(0 0 4px 1px rgba($gto_teal, 0.3));
  .media {
    @include ellipsis;
  }
  .byline {
    font-size: 0.75rem;
    color: $gto_dark_blue;
    font-weight: $font-weight-light;
  }
}

@mixin artist-thumb-mixin {
  position: relative;
  min-height: 300px;
  text-align: center;
  padding: 10px;
  margin-bottom: 6px;
  .image {
    overflow: hidden;
    width: 100%;
    height: 280px;
    @include background-cover;
    @include round-corners(3px);
  }
  &:hover {
    /** @include box-shadow(0 0 1px 1px rgba(200,200,200,0.5)); */
  }
  .desc {
    @include card-description;
  }
}

@mixin search-filter {
  .filter {
    margin-top: -14px;
    border-bottom: none;
    .fa {
      font-size: 1.2rem;
      &:hover {
        color: $gto_dark_teal;
      }
    }
    input[type="text"] {
      background-color: transparent;
      padding: 5px;
      margin-left: 5px;
      border: none;
      font-size: 1.2rem;
      @include transition(width 0.25s ease-in-out);
      font-weight: $font-weight-light;
    }
  }
  @media screen and (min-width: $screen-md-max) {
    .filter {
      @include light-bottom-border margin-top: 22px;
      margin-left: -20px;
      padding-left: 20px;
      padding-bottom: 4px;
    }
  }
}
@mixin section-header {
  padding-bottom: 4px;
  padding-left: 1px;
  text-transform: uppercase;
  font-size: 0.8rem;
  margin-bottom: 8px;
  @include light-bottom-border @include ellipsis;
}

@mixin popup-elements {
  font-size: 0.9rem;
  .popup-text {
    padding: 0 15px 15px;
  }
  .popup-close {
    position: absolute;
    right: 15px;
    top: 10px;
    width: 15px;
    text-align: center;
  }

  .popup-header {
    text-transform: uppercase;
    line-height: 1.5em;
    font-weight: $font-weight-normal;
    padding: 10px 15px 4px;
    margin-bottom: 12px;
    position: relative;
    @include light-bottom-border;
  }
  .popup-text {
    line-height: 1.1rem;
    font-size: 0.8rem;
  }
}

$sampler-thumbnail-size: 250px;

@mixin sampler-block-mixin {
  @include artist-thumb-mixin;
  height: $sampler-thumbnail-size;
  min-height: inherit;
  padding: 6px;
  overflow: hidden;

  width: 20%;
  float: left;
  @media screen and (max-width: $screen-lg-max) {
    width: 25%;
    &:nth-child(13) {
      display: block;
    }
  }
  @media screen and (max-width: $screen-md-max) {
    width: 33.33%;
    &:nth-child(13) {
      display: none;
    }
  }
  @media screen and (max-width: $screen-sm-max) {
    width: 50%;
    &:nth-child(13) {
      display: block;
    }
  }
  @media screen and (max-width: $screen-xs-max) {
    &.first {
      margin-top: 10px;
    }
    width: 100%;
    .desc {
      opacity: 1 !important;
    }
  }

  .os-violator {
    position: absolute;
    top: 9px;
    right: 9px;
  }
  .image {
    height: $sampler-thumbnail-size;
  }
  .desc {
    @include transition(all 0.25s ease-in-out);
    @include opacity(0);
    padding-top: 0;
    height: 33px;
    line-height: 33px;
  }
  &:hover {
    .desc {
      opacity: 1;
    }
  }
}

@mixin os-violator {
  background-image: url("../images/os_violator_tiny.svg");
  background-color: rgba(245, 245, 245, 0.75);
  background-repeat: no-repeat;
  background-size: 40px 40px;
  background-position: center;
  width: 40px;
  height: 40px;
  @include round-corners(4px);
  &.with-image {
    background: none;
  }
}

@mixin artist-image-os-violator {
  position: absolute;
  display: inline-block;
  background-image: url("../images/os_violator.svg");
  background-color: rgba(245, 245, 245, 0.75);
  width: 75px;
  height: 80px;
  background-size: contain;
}

@mixin form-label {
  display: block;
  margin-bottom: 5px;
  color: $medium-gray;
  font-size: 0.9rem;
}

.gto-list {
  ul {
    padding-left: 20px;
  }
  li {
    list-style: circle;
  }
}

@mixin sold-sign {
  text-transform: uppercase;
  color: $gto_yellow;
  background-color: rgba(255, 255, 255, 0.8);
  @include round-corners();
}
