// Generated by CoffeeScript 1.12.7
(function() {
  jQuery.hideableRowsDefaults = {
    row: "table tbody tr",
    whatToHideSelectors: ".hide-rows input"
  };

  jQuery.fn.hideableRows = function(method) {
    var getCheckedClasses, hasAnyClass, inArgs, methods, that, toggleItems;
    that = this;
    inArgs = arguments;
    hasAnyClass = function(item, classes) {
      var c, i, len;
      for (i = 0, len = classes.length; i < len; i++) {
        c = classes[i];
        if (jQuery(item).hasClass(c)) {
          return true;
        }
      }
      return false;
    };
    getCheckedClasses = function(container, opts) {
      return _.compact(
        _.map(jQuery(container).find(opts.whatToHideSelectors), function(item) {
          return jQuery(item).is(":checked") && jQuery(item).val();
        })
      );
    };
    toggleItems = function(container, opts) {
      var checkedClasses;
      checkedClasses = getCheckedClasses(container, opts);
      return jQuery(that)
        .find(opts.row)
        .each(function(idx, row) {
          var $row, hide;
          $row = jQuery(row);
          hide = hasAnyClass(row, checkedClasses);
          return $row.toggleClass("js-hidden-row", hide);
        });
    };
    methods = {
      init: function(options) {
        var o;
        o = _.extend({}, jQuery.hideableRowsDefaults, options);
        return jQuery(this).on(
          "click",
          o.whatToHideSelectors,
          (function(_this) {
            return function(ev) {
              return toggleItems(_this, o);
            };
          })(this)
        );
      }
    };
    return this.each(function() {
      if (methods[method]) {
        return methods[method].apply(
          this,
          Array.prototype.slice.call(inArgs, 1)
        );
      } else if (typeof method === "object" || !method) {
        return methods.init.apply(this, inArgs);
      } else {
        return $.error(
          "Method " + method + " does not exist on jQuery.hideableRows"
        );
      }
    });
  };
}.call(this));
