%a{:name => event.id}
- event_classes = [event.publish ? 'published':'unpublished']
- if event.in_progress?
  - event_classes << 'in_progress'
- if event.future?
  - event_classes << 'future'
- if event.past?
  - event_classes << 'past'

.event{:class => event_classes.join(' '), :style => ((event.in_progress? && !@_ismobile) ? 'display:none' : '')}
  .title
    #{event.title}
  .info 
    .time #{EventsHelper::event_time(event)}
    - if event.reception_starttime.present?
      .reception_time Reception: #{EventsHelper::reception_time(event)}
 
  .venue
    .name #{event.venue}
    .address 
      - address_hash = event.address_hash[:parsed]
      - txt = [address_hash[:street], address_hash[:city]]
      - txt << address_hash[:state] if address_hash[:state].downcase != 'ca'
      - txt << address_hash[:zip] if address_hash[:zip] != '94110'
      - txt.each do |item|
        %span.nobr #{item}
      .maplink 
        %a{:target => '_blank', :href => event.map_link} (map)
  .clear        
  .desc.markdown #{markdown(event.description)}
  .url
    - if event.url.present?
      Event Website:
      :ruby 
        url = event.url
        display = event.url.gsub(/^https?:\/\//, '')
        unless /^https?:\/\// =~ url
          url = 'http://' + event.url
        end         
      %a{:href => url} #{display}
