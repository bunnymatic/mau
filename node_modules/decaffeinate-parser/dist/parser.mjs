import lex from 'coffee-lex';
import * as CoffeeScript from 'decaffeinate-coffeescript';
import { patchCoffeeScript } from './ext/coffee-script';
import mapProgram from './mappers/mapProgram';
import fixLocations from './util/fixLocations';
import ParseContext from './util/ParseContext';
export function parse(source) {
    patchCoffeeScript();
    var context = ParseContext.fromSource(source, lex, CoffeeScript.nodes);
    fixLocations(context, context.ast);
    var program = mapProgram(context);
    traverse(program, function (node, parent) {
        node.parentNode = parent;
    });
    return program;
}
export function traverse(node, callback) {
    function traverseRec(currentNode, currentParent) {
        var shouldDescend = callback(currentNode, currentParent);
        if (shouldDescend !== false) {
            for (var _i = 0, _a = currentNode.getChildren(); _i < _a.length; _i++) {
                var child = _a[_i];
                traverseRec(child, currentNode);
            }
        }
    }
    traverseRec(node, null);
}
