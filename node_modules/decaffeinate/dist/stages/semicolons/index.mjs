var buildConfig = require('ast-processor-babylon-config');
var asi = require('automatic-semicolon-insertion');
import { parse } from 'babylon';
import MagicString from 'magic-string';
import { logger } from '../../utils/debug';
var BABYLON_PLUGINS = [
    'flow',
    'jsx',
    'asyncGenerators',
    'classConstructorCall',
    'classProperties',
    'decorators',
    'doExpressions',
    'exportExtensions',
    'functionBind',
    'functionSent',
    'objectRestSpread',
    'optionalChaining',
];
var SemicolonsStage = (function () {
    function SemicolonsStage() {
    }
    SemicolonsStage.run = function (content) {
        var log = logger(this.name);
        log(content);
        var editor = new MagicString(content);
        var ast = parse(content, {
            sourceType: 'module',
            plugins: BABYLON_PLUGINS,
            allowReturnOutsideFunction: true,
            tokens: true,
        }); // tslint:disable-line no-any
        var config = buildConfig(content, ast);
        asi(config);
        config.insertions.forEach(function (_a) {
            var index = _a.index, content = _a.content;
            return editor.appendLeft(index, content);
        });
        config.removals.forEach(function (_a) {
            var start = _a.start, end = _a.end;
            return editor.remove(start, end);
        });
        return {
            code: editor.toString(),
            suggestions: [],
        };
    };
    return SemicolonsStage;
}());
export default SemicolonsStage;
