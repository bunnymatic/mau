import * as tslib_1 from "tslib";
import normalizeListItem from '../../../utils/normalizeListItem';
import NodePatcher from './../../../patchers/NodePatcher';
/**
 * Handles object literals.
 */
var ObjectInitialiserPatcher = (function (_super) {
    tslib_1.__extends(ObjectInitialiserPatcher, _super);
    function ObjectInitialiserPatcher(patcherContext, members) {
        var _this = _super.call(this, patcherContext) || this;
        _this.members = members;
        return _this;
    }
    ObjectInitialiserPatcher.prototype.patchAsExpression = function () {
        try {
            for (var _a = tslib_1.__values(this.members.entries()), _b = _a.next(); !_b.done; _b = _a.next()) {
                var _c = tslib_1.__read(_b.value, 2), i = _c[0], member = _c[1];
                member.patch();
                normalizeListItem(this, member, this.members[i + 1]);
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_b && !_b.done && (_d = _a.return)) _d.call(_a);
            }
            finally { if (e_1) throw e_1.error; }
        }
        var e_1, _d;
    };
    return ObjectInitialiserPatcher;
}(NodePatcher));
export default ObjectInitialiserPatcher;
