import SourceTokenList from './SourceTokenList';
/**
 * Represents a token at a particular index within a list of tokens.
 */
export default class SourceTokenListIndex {
    private _sourceTokenList;
    private _index;
    constructor(sourceTokenList: SourceTokenList, index: number);
    /**
     * Get a new index offset from this one, if the resulting offset is within
     * the list range.
     */
    advance(offset: number): SourceTokenListIndex | null;
    /**
     * Get the index of the token after this one, if it's not the last one.
     */
    next(): SourceTokenListIndex | null;
    /**
     * Get the index of the token before this one, if it's not the first one.
     */
    previous(): SourceTokenListIndex | null;
    /**
     * Determines whether this index comes before another.
     */
    isBefore(other: SourceTokenListIndex): boolean;
    /**
     * Determines whether this index comes after another.
     */
    isAfter(other: SourceTokenListIndex): boolean;
    /**
     * Compare this index to another, returning 0 for equality, a negative number
     * if this is less than `other`, and a positive number otherwise.
     */
    compare(other: SourceTokenListIndex): number;
    /**
     * Returns an int of the relative distance between this index and the other
     * index (positive if the other one is later, negative if the other one is
     * earlier).
     */
    distance(other: SourceTokenListIndex): number;
}
