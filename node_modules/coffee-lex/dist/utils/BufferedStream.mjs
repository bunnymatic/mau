var BufferedStream = (function () {
    function BufferedStream(stream) {
        this.pending = [];
        this._getNextLocation = stream;
    }
    BufferedStream.prototype.shift = function () {
        return this.pending.shift() || this._getNextLocation();
    };
    BufferedStream.prototype.hasNext = function () {
        var _this = this;
        var types = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            types[_i] = arguments[_i];
        }
        var locationsToPutBack = [];
        var result = types.every(function (type) {
            var next = _this.shift();
            locationsToPutBack.push(next);
            return next.type === type;
        });
        this.unshift.apply(this, locationsToPutBack);
        return result;
    };
    BufferedStream.prototype.peek = function () {
        var result = this.shift();
        this.unshift(result);
        return result;
    };
    BufferedStream.prototype.unshift = function () {
        var tokens = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            tokens[_i] = arguments[_i];
        }
        (_a = this.pending).unshift.apply(_a, tokens);
        var _a;
    };
    return BufferedStream;
}());
export default BufferedStream;
